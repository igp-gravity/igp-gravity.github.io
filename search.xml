<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[测试第一个NB微服务]]></title>
    <url>%2F2018%2F11%2F28%2Fgeoist20181128.html</url>
    <content type="text"><![CDATA[尝试了一下kernelgateway的notebook_http功能 因为Geoist的定位就是将封装后的地球物理学代码共享给更多的用户使用，所以让python程序以微服务框架为大家服务是理想的解决方案之一。今天在出差的路上没忍住，亲测了一下让Jupyter Notebook变为微服务的kernelgateway服务。作为Jupyter系列项目中的一个，这个功能还是很酷的，只要通过简单的改造，你的nb程序就可以变成microservice啦 首先启动Jupyter Notebook，写一个ipynb文件，本次测试的代码如下： 开始第一个代码块cell 12import mathimport json 再写第二个代码块 12345678910# GET /convertreq = json.loads(REQUEST)args = req[&apos;args&apos;]if &apos;angle&apos; not in args: print(json.dumps(&#123;&apos;convertedAngle&apos;:None&#125;))else: angle = int(args[&apos;angle&apos;][0]) converted = math.radians(angle) print(json.dumps(&#123;&apos;convertedAngle&apos;:converted&#125;)) 注意上面的# GET /convert，这个是关键，convert代表将来的微服务入口，这个cell的前三行是固定写法，记下来。里面的print是返回的内容。 写好没问题后，保存到本地，注意目录要能通过http访问到。运行命令不容易记，写在这里吧 1jupyter kernelgateway --KernelGatewayApp.api=&apos;kernel_gateway.notebook_http&apos; --KernelGatewayApp.seed_uri=&apos;kgtest.ipynb&apos; ps：如果出现signal相关错误，可以通过尝试conda update ipykernel解决 演示NB脚本 更多kernelgateway的技术手册]]></content>
      <tags>
        <tag>geoist</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[测试Kubernetes部署和容器服务]]></title>
    <url>%2F2018%2F11%2F27%2Fgeoist20181127.html</url>
    <content type="text"><![CDATA[通过 microk8s使用Kubernetes结合Azure pipeline实现CD工作 折腾了几天MS的Azure pipeline在build阶段的任务终于配置好了，但是在release阶段一直没搞定。今天用了1元券在MS的Azure上面开了一个虚拟机，准备装个大名鼎鼎的k8s，世纪互联上总是比国外的慢不少，虽然是官方在11月中旬已经宣布登陆中国市场，但是在国内Azure上还没找到，自己手动装一个吧。前面坑不少，这几天总算把Azure DevOps的部署环境搞明白了，界面比Travis-CI高大上，但是感觉坑比那个多一些，没办法先当小白吧，一个一个坑爬过去，先把经验写到这里以便给自己给可能需要的人一些帮助… 在Azure世纪互联建立Ubuntu LTS虚拟机，通过Snap安装microk8s。 microk8s是一个简化版的kube用于测试和单机部署，一行命令即可完成安装。 1snap install microk8s --classic 为了不和已经安装的 kubectl 产生冲突，microk8s 有自己的 microk8s.kubectl 命令 1microk8s.kubectl get services 如果本地没有 kubectl 命令可以增加一个别名 1snap alias microk8s.kubectl kubectl 或者取消 1snap unalias kubectl API 服务监听 8080 端口,如果是在Azure云上面的虚拟机上面安装，需要安全配置里面打开端口 1microk8s.kubectl config view 查看附加组件。 1Kubernetes Addons microk8s 只是最精简的安装，所以只有 api-server, controller-manager, scheduler, kubelet, cni, kube-proxy 被安装运行。额外的服务比如 kube-dns, dashboard 可以通过microk8s.enable 启动 1microk8s.enable dns dashboard 禁用 1microk8s.disable dns dashboard 可用的扩展 dns dashboard storage ingress gpu istio registry metrics-server 停止或重启 microk8s 12snap disable microk8s # 停止snap enable microk8s # 重启 移除 12microk8s.resetsnap remove microk8s 安装完环境后，定义pod，首先要用vi新建一个hello-world-pod.yaml，保存 12345678910apiVersion: v1kind: Podmetadata: name: hello-worldspec: restartPolicy: OnFailure containers: - name: hello image: &quot;ubuntu&quot; command: [&quot;/bin/echo&quot;,&quot;hello”,”world&quot;] 字段解释 12345678910apiVersion: 声明K8s的API版本kind: 声明API对象的类型，这里是Podmetadata:设置Pod的元数据 name: hello-world 指定Pod的名称Pod名称必粗在Namespace内唯一spec:配置Pod的具体规格 restartPolicy: 重启策略 containers:容器规格，数组形式，每一项定义一个容器 - name:指定容器的名称，在Pod的定义中唯一 image:设置容器镜像 command:设置容器的启动命令 定义和创建pod 1kubectl create -f hello-world-pod.yaml 查询pod信息 1kubectl get pod hello-world 输出pod信息 1kubectl get pod hello-world --output json 状态和生命周期查询 1kubectl describe pod hello-world 更多参考：https://github.com/ubuntu/microk8s]]></content>
      <tags>
        <tag>geoist</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[纪念第一个DevOps项目框架完成]]></title>
    <url>%2F2018%2F11%2F25%2Fgeoist20181126.html</url>
    <content type="text"><![CDATA[我们第一个地球物理开源项目，期望这是梦想的开始… 经过2周多组里的人努力工作，终于完成了一套协同工作环境 自动化文档、自动化集成和自动化部署，世界变化真快，从今开始实践Agile的软件设计方法 项目地址https://github.com/igp-gravity/geoist 参考文档https://geoist.readthedocs.io 我们的组织也有了，欢迎大家一起和我们践行现代化软件研发实践和共享精神https://github.com/gravity-igpcea 看着这些小图标，是不是有点高大上]]></content>
      <tags>
        <tag>geoist</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Jupyter NB秒变微服务的利器]]></title>
    <url>%2F2018%2F11%2F25%2Fgeoist20181125.html</url>
    <content type="text"><![CDATA[Jupyter Kernel Gateway这个工具可以帮你把写好的notebook变为REST api 原文可参考：https://ndres.me/post/jupyter-notebook-rest-api/ 安装1conda install -c conda-forge jupyter_kernel_gateway 启动1jupyter kernelgateway 在这个kernel的基础上，还可以进一步使用Jupyter Enterprise Gateway将你的cluster集群变成服务群。 这个项目的地址可以找到更多参考信息：https://github.com/jupyter/enterprise_gateway]]></content>
      <tags>
        <tag>geoist</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Geoist自定义节点]]></title>
    <url>%2F2018%2F11%2F15%2Fgeoist20181115.html</url>
    <content type="text"><![CDATA[今天的工作进展 第一，实现了自定义界面的设计，通过数据源绑定和参数设计，采用vue框架下的HTML设计，可以提高用户体验； 第二，初步完成了5个节点的封装，实现了Pandas的Dataframe数据类型和网格Grid两种类型的数据处理和流转； 第三，注册到Datist节点库，并在Geoist的GitHub线上的extension目录下进行统一管理。]]></content>
      <tags>
        <tag>geoist</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[新的Geoist图标诞生了]]></title>
    <url>%2F2018%2F11%2F14%2Fgeoist20181114.html</url>
    <content type="text"><![CDATA[Geoist图标设计 开源的Geoist软件包，很快就要和大家见面了，DevOps的持续交付软件实践，为地学开源软件贡献一份力量。]]></content>
      <tags>
        <tag>geoist</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[什么是Geoist？]]></title>
    <url>%2F2018%2F11%2F13%2Fgeoist20181113.html</url>
    <content type="text"><![CDATA[基于Python的开源地球物理软件包-Geoist Geoist是基于Python语言的开源程序包，面向地球物理研究生、教学科研人员，也可为原型化的地球物理算法设计和科研提供基础软件服务。程序包功能包括：重磁位场数据处理、反演解释和模型评估；高精度时变重力数据平差等。 该程序包采用MIT开源协议，并在Github上进行公开发布和维护，代码编写遵循PEP8规范。Geoist程序包采用模块化设计，用户可基于Geoist程序包进行二次开发和集成应用。 项目网站：https://github.com/igp-gravity/geoist 更多关于Geoist]]></content>
  </entry>
  <entry>
    <title><![CDATA[ISPEC团队应邀参加2018微软技术生态大会]]></title>
    <url>%2F2018%2F11%2F11%2Fmssummit2018.html</url>
    <content type="text"><![CDATA[ISPEC团队应邀参加2018微软技术生态大会 2018年10月24日-27日，由地球所牵头的“地震分析会商技术系统建设”项目团队，应邀参加在上海世博中心举行的微软技术暨生态大会（Microsoft Tech Summit 2018），并以“微软LUIS语义理解模型在地震会商技术系统中的应用”为题，进行了最新的地震行业AI技术成果分享。建立现代化与智能化地震会商技术平台系统，发挥现代科技优势，是提高地震预测预报服务能力的关键。地震分析会商技术系统是支持会商分析信息化、智能化的技术平台。通过自然语言处理（NLP）技术成果，地震行业团队基于微软LUIS语义理解模型和Bot框架，改进了原有的GUI设计，通过小G地震科研助手针对不同情景设计并实现了从前端的语义模型定义到后端服务流程匹配的全链条功能，初步搭建了一套新型交互式地震会商技术系统V1.0版本，并初步具备列装条件。]]></content>
  </entry>
  <entry>
    <title><![CDATA[参加微软亚洲研究院二十年庆典]]></title>
    <url>%2F2018%2F11%2F11%2Finvo20.html</url>
    <content type="text"><![CDATA[参加微软亚洲研究院20周年庆典1998-2008二十年历程，5000+论文产出，开放合作，创新模式值得学习。]]></content>
  </entry>
  <entry>
    <title><![CDATA[Geoist计划正式启航]]></title>
    <url>%2F2018%2F11%2F11%2Fgeoist181111.html</url>
    <content type="text"><![CDATA[Geoist项目计划即将出炉]]></content>
  </entry>
  <entry>
    <title><![CDATA[小店开张喽！！！]]></title>
    <url>%2F2018%2F02%2F03%2Fhello-world.html</url>
    <content type="text"><![CDATA[欢迎来到 小G俱乐部! 地震科研助手经过2017年的积累，有了一个不错的开局，而2018年是新的征程即将开启。首先，作为流程化技术支撑Datist软件，正式推出了官方文档 . 其次，通过在 GitHub建立开放的仓库，期望能进一步吸收社会化编程的积极思想，推动构建地震行业的业务平台建设进程. 展望2018新的目标1以新的科技的力量，为地震行业业务体制改革提供技术保障。 新的起点1大数据、人工智能和平台技术三股力量同时发力。 新的任务1打造防震减灾领域互联网+型的新生态系统。]]></content>
  </entry>
  <entry>
    <title><![CDATA[chenshi01]]></title>
    <url>%2F2018%2F01%2F22%2Fchenshi01.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[paper1]]></title>
    <url>%2F2018%2F01%2F21%2Fpaper1.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[让科研生涯更开放]]></title>
    <url>%2F2018%2F01%2F20%2Ftest.html</url>
    <content type="text"><![CDATA[我的个人科研站点最近研究了一下 githubs pages 建站方法，io域名，完全免费，适合“穷苦”的科研人员啊 科研主页 steveshichen.github.io 地震科普写作 chenshi.readthedocs.io 还有我目前做的两个项目 重力平差项目 steveshichen.github.io/bayadj 三维反演项目 steveshichen.github.io/gravinv 再公布一下我个人的github账号，steveshichen ，与该站账号不同的是，这里面有关于我负责项目的最新科研进展。 欢迎大家关注，star吧！]]></content>
  </entry>
  <entry>
    <title><![CDATA[today]]></title>
    <url>%2F2018%2F01%2F20%2Ftoday.html</url>
    <content type="text"><![CDATA[今天工作很顺利，天气也很好]]></content>
      <tags>
        <tag>工作</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[知识图谱点滴]]></title>
    <url>%2F2018%2F01%2F18%2Fkb.html</url>
    <content type="text"><![CDATA[关于知识图谱的技术发展，已经看了一段时间资料了，一点知识留此存照 知识图谱文献]]></content>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[新年第一贴]]></title>
    <url>%2F2018%2F01%2F16%2Fmy-first-blog.html</url>
    <content type="text"><![CDATA[新领地建好了github pages + Hexo + Next为我提供了新的工作平台，Cheers！]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>IT</tag>
        <tag>github</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
